name: OOMlet main Branch CI Workflow
on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  woke:
    name: Inclusive Language Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: woke
        uses: get-woke/woke-action@v0
        with:
          fail-on-error: true

  build-test:
    name: Build and Test
    runs-on: ubuntu-latest
    needs: woke
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: Build and Verify with Maven
        run: ./mvnw clean verify

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: target/surefire-reports/
          if-no-files-found: warn
          overwrite: true

  docker:
    name: Docker Build and Push
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker Image
        run: |
          docker build -t ghcr.io/${{ github.repository_owner }}/oomlet:latest .

      - name: Push Docker Image
        run: |
          docker push ghcr.io/${{ github.repository_owner }}/oomlet:latest

  helm:
    name: Helm Package and Upload
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set Git Short Hash
        id: vars
        run: |
          SHORT_HASH=$(git rev-parse --short HEAD)
          echo "SHORT_HASH=$SHORT_HASH" >> "$GITHUB_ENV"


      - name: Package Helm Chart
        run: |
          helm package helm --version "0.1.0-dev.${{ env.SHORT_HASH }}"
          mkdir -p helm-charts
          mv oomlet-*.tgz helm-charts/

      - name: Upload Helm Chart
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: actions/upload-artifact@v4
        with:
          name: helm-charts
          path: helm-charts/
          if-no-files-found: warn
          overwrite: true

  coverage:
    name: Coverage Reporting and Artifacts
    runs-on: ubuntu-latest
    needs: helm
    steps:
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Build with Coverage
        run: ./mvnw clean verify

      - name: Upload to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: target/site/jacoco/jacoco.xml
          fail_ci_if_error: true

      - name: Upload HTML Coverage to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./target/site/jacoco
          publish_branch: gh-pages

      - name: Prepare Source Package
        run: |
          mkdir -p staging/source
          rsync -av --exclude=target --exclude=.git --exclude=staging ./ staging/source/
          cd staging/source
          zip -r ../../source.zip .
          tar -czf ../../source.tar.gz .

      - name: Upload Source Archives
        uses: actions/upload-artifact@v4
        with:
          name: source-archives
          path: |
            source.zip
            source.tar.gz
          if-no-files-found: warn
          overwrite: true

      - name: Upload JAR
        uses: actions/upload-artifact@v4
        with:
          name: oomlet-jar
          path: target/oomlet-*.jar
          if-no-files-found: warn
          overwrite: true