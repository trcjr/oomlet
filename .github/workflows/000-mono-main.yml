name: OOMlet main Branch CI Workflow

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  woke:
    name: Inclusive Language Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: woke
        uses: get-woke/woke-action@v0
        with:
          fail-on-error: true

  build-test:
    name: Build and Test
    runs-on: ubuntu-latest
    outputs:
      short_hash: ${{ steps.vars.outputs.short_hash }}
    needs: woke
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: Set Git Short Hash
        id: vars
        run: echo "short_hash=$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2/repository
            ~/.m2/wrapper
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build and Verify with Maven
        run: |
          ./mvnw versions:set -DnewVersion="0.1.0"
          ./mvnw clean verify

      - name: Upload Spring Boot JAR
        uses: actions/upload-artifact@v4
        with:
          name: oomlet-jar
          path: target/oomlet-0.1.0.jar
          if-no-files-found: error
          overwrite: true

  build-docs:
    name: Generate JavaDocs
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: Generate JavaDocs
        run: ./mvnw javadoc:javadoc

      - name: Upload JavaDocs
        uses: actions/upload-artifact@v4
        with:
          name: javadocs
          path: target/site/apidocs/
          if-no-files-found: warn
          overwrite: true

  docker:
    name: Docker Build and Push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker Image
        run: |
          docker build \
            -t ghcr.io/${{ github.repository_owner }}/oomlet:0.1.0 .

      - name: Push Docker Image
        run: |
          docker push ghcr.io/${{ github.repository_owner }}/oomlet:0.1.0

  helm:
    name: Helm Package and Upload
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Lint Helm Chart
        run: helm lint helm

      - name: Package Helm Chart
        run: |
          helm package helm --version "0.1.0"
          mkdir -p helm-charts
          mv oomlet-*.tgz helm-charts/

      - name: Upload Helm Chart
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: actions/upload-artifact@v4
        with:
          name: helm-charts
          path: helm-charts/
          if-no-files-found: warn
          overwrite: true

  coverage:
    name: Coverage Reporting and Artifacts
    runs-on: ubuntu-latest
    needs: build-test
    env:
      SHORT_HASH: ${{ needs.build-test.outputs.short_hash }}
    steps:
      - name: Run Coverage Report
        run: ./mvnw jacoco:report

      - name: Upload Coverage Results
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: target/site/jacoco/
          if-no-files-found: warn
          overwrite: true