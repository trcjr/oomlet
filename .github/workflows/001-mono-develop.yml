name: Develop Snapshot Release

on:
  push:
    branches:
      - develop
  workflow_dispatch:

jobs:
  snapshot:
    name: Build, Test, and Publish Snapshot
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: Set Git Short Hash
        id: vars
        run: echo "SHORT_HASH=$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"

      - name: Set Snapshot Version and Build
        run: |
          ./mvnw versions:set -DnewVersion="develop-SNAPSHOT-${{ steps.vars.outputs.SHORT_HASH }}"
          ./mvnw clean verify

      - name: Upload JAR
        uses: actions/upload-artifact@v4
        with:
          name: oomlet-snapshot-jar
          path: target/oomlet-*.jar
          if-no-files-found: warn
          overwrite: true

      - name: Upload HTML Coverage to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./target/site/jacoco
          publish_branch: gh-pages

      - name: Upload to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: target/site/jacoco/jacoco.xml
          fail_ci_if_error: true

      - name: Build Docker Image
        run: |
          docker build -t ghcr.io/${{ github.repository_owner }}/oomlet:develop-snapshot-${{ steps.vars.outputs.SHORT_HASH }} .

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Docker Image
        run: |
          docker push ghcr.io/${{ github.repository_owner }}/oomlet:develop-snapshot-${{ steps.vars.outputs.SHORT_HASH }}

      - name: Package Helm Chart
        run: |
          helm package helm/oomlet --version develop-SNAPSHOT-${{ steps.vars.outputs.SHORT_HASH }}
          mkdir -p helm-charts
          mv oomlet-*.tgz helm-charts/

      - name: Upload Helm Chart Artifact
        uses: actions/upload-artifact@v4
        with:
          name: helm-chart-snapshot
          path: helm-charts/
          if-no-files-found: warn
          overwrite: true